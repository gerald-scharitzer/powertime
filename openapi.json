{"openapi":"3.1.0","info":{"title":"WattTime Data API","summary":"If you're looking for the legacy APIv2 documentation, you'll find it [here](https://legacy-docs.watttime.org).","version":"V3","x-logo":{"url":"WattTime-logo-2023-black-1920px_wpad.png","backgroundColor":"#F6F6F6","altText":"WattTime Logo"}},"servers":[{"url":"https://api.watttime.org","description":"WattTime Base API"}],"tags":[{"name":"Introduction","description":"The WattTime API provides access to real-time, forecast, and historical data for electric grids around the world, including marginal emissions data. For the different signals we provide, see the [data signals page](https://www.watttime.org/data-signals).\n\nIf you’re curious about what you can do with this data, [see the solutions we support](https://www.watttime.org/), where you can dive into the various use cases. A common example of how to use the MOER value is to schedule load at the cleanest times of day.\n\nYou can access the API by sending standard HTTP requests to the endpoints listed below. The `/v3/historical`, `/v3/forecast`, and `/v3/maps` endpoints are only available to subscribers. However, if you don’t yet have a subscription, you can preview all of the available region-specific data by providing `CAISO_NORTH` as the region for your requests. A comparison of the different available data plans can be found [here](https://www.watttime.org/docs-dev/data-plans/).\n\nPython3 example code is provided in the right pane of this documentation which shows how to interact with the API endpoints. You can kick start your development by using our [python client/SDK](https://github.com/WattTime/watttime-python-client).\n\n## Restrictions\n\nThere is a strict limit on the rate at which you may query the API. From any user, we allow a maximum of 3,000 requests in any 5-minute rolling window (an average of 10 requests per second). There is also a lower limit specific to the `/login` endpoint, which is 100 requests in 5 minutes. If requests exceed this, an `HTTP 429` error code is returned.\n\n**The API rate limit is a total of 3,000 requests in 5 minutes (an average of 10 per second). The limit for /login is 100 requests in 5 minutes.**\n\n## API Status Page and User Alerts\n\nWattTime publishes the current and historical uptime on the [API Status Page](https://status.watttime.org/). This page shows upcoming scheduled maintenance and provides updates during outages or maintenance. Users should subscribe to alerts via the status page to be kept up to date. This page is our method of communicating updates to our users related to maintenance, outages, and announcements related to version upgrades. Follow these instructions to subscribe to alerts:\n1. Navigate to the [WattTime API Status Page](https://status.watttime.org/)\n1. Click the 'subscribe to updates' button in the top right corner\n1. Select your preferred means of notification (email, SMS, Slack, webhook)\n1. Enter your contact information (this will not be used for any other purpose)\n\n## Best Practices for API Usage\nIf using this API to control many smart devices in different locations, we suggest the following protocol. For each device location, use GPS lat/lon to query `/v3/region-from-loc` in order to determine the region for the desired `signal_type`. Then, query the other endpoints (e.g. `/v3/forecast`, `/v3/historical`, etc.) with the resulting region to receive signal data.\n\nBecause grid region boundaries are occasionally updated, it is important to re-query `/v3/region-from-loc` at least once a month to ensure devices are receiving the signal corresponding to their location. The `/v3/maps` endpoint provides a GeoJSON that can be used for offline geocoding. The GeoJSON file includes a `last_updated` field that changes whenever the grid regions change.\n","x-displayName":"Introduction"},{"name":"Authentication","description":"To start using the API, first register for an account by using the `/register` endpoint. Then use the `/login` endpoint to obtain an access token. You can then use your token to access the remainder of our endpoints. You must include your token in an authorization (bearer) header in subsequent requests to retrieve data. Your access token will expire after 30 minutes and you'll need to sign in again to obtain a new one.","x-displayName":"Authentication"},{"name":"GET Account Access","x-displayName":"GET Account Access"},{"name":"GET Regions and Maps","x-displayName":"GET Regions and Maps"},{"name":"GET Forecast","x-displayName":"GET Forecast"},{"name":"GET Historical","x-displayName":"GET Historical"},{"name":"GET Index","x-displayName":"GET Index"},{"name":"Transitioning from APIv2 to APIv3","description":"We're excited to upgrade our API after about 5 years on the same version. We don't undertake this lightly, and endeavor to avoid breaking changes whenever possible. We think the upgrades we've made available in API v3 will be well worth the effort to update your code, and we're happy to support you as you make the transition. Please contact us with questions, support@WattTime.org.\n\nAfter an overview including a description of miscellaneous changes, the rest of this guide is meant to help you translate your existing v2 requests into their respective v3 requests and handle any differences in the responses that come back.\n\n# Overview\n\nAt a high level, the biggest change between v2 and v3 is a disambiguation of the `/v2/data` endpoint – since these data\nare best used in historical analysis rather than real-time optimization, we're now housing these data in the\n`/v3/historical` endpoint.\n\n\nThe `/v3/forecast` endpoint continues to provide forecast data for real time optimization, across a number of different signal types. There is now a dedicated `/v3/forecast/historical` endpoint for gathering historical forecasts for retrospective analyses.\n\nWattTime is adding support for a number of new signal types, including: `health_damage` (both forecast and historical), and `co2_aoer` (historical only, for accounting purposes). WattTime's marginal operating emissions rate has been named `co2_moer` to disambiguate from other signals with equivalent units.\n\nMost query responses will now contain two stanzas: `data` and `meta`. The content in `data` includes point times, values, and optional pointwise metadata related to the filtering criteria provided in a request. The content in `meta` describes the returned data, including any potential warnings or issues encountered.\n\nGeographic regions were formerly identified as `abbrev` and `ba` (for balancing authority), and in v3 will be known as `region` (which is inclusive of balancing authorities, subregions, and international nomenclature). `region` is also a unique identifier across all endpoints.\n\nGoing forward, new regions will only be added to v3. With the introduction of v3, we're also releasing `co2_moer` data in 12 new countries comprising 21 new regions total.\n\nWhere in the past a user could request data from `/v2/data` using GPS lat/long as inputs, the `/v3/historical` endpoint now accepts only the region parameter as input to define the location.\n\nTime zones are now required on all user-provided timestamps. Previously in v2 if timestamps lacked time zone information, UTC was assumed. That must now be made explicit in v3 in the request.\n\nSignificantly, our model versioning semantics are now date based. This is a change from the V2 API, where model versioning differed between signal types and endpoints. In the V2 API, model versions for the MOER signal type were represented as decimals (i.e. `2.0`, `3.0`, `3.2`) while forecast model versions were semantically linked to the MOER data they were forecasting (i.e. `3.2-1.0.0`). With the introduction of new signal types and modeling methodologies, WattTime is shifting towards date-based versioning to remove some confusion around the significance of model version names. Model versions across all endpoints in the V3 API are dates (i.e. `2022-12-31`), which represent the approximate end of sample data used to train that model. When a new model version is released, it may indicate that the model was trained on more recent data (which is necessary as the power grid transitions to renewable fuel types), or as WattTime develops new methodologies that improve the accuracy of our signals. To learn more about the various methodologies used in each grid region, see [this methodology document](https://watttime.org/data-science/methodology-validation/#headline-11780-1389). See [this section below](#section/Version-mappings) for a guide to how old versions and new model dates match up.\n\n\n# v2/register\nThe URL is the only update to this endpoint.\n### v2 URL\n`https://api2.watttime.org/v2/register`\n### v3 URL\n`https://api.watttime.org/register`\n\n# v2/login\nThe URL is the only update to this endpoint.\n### v2 URL\n`https://api2.watttime.org/v2/login`\n### v3 URL\n`https://api.watttime.org/login`\n\n# v2/password\nThe URL is the only update to this endpoint.\n### v2 URL\n`https://api2.watttime.org/v2/password`\n### v3 URL\n`https://api.watttime.org/password`\n\n# v2/ba-from-loc\n\nFormerly known as `ba` and `abbrev`, regions are now identified by the `region` parameter which is also the natural key in API v3 (the `id` in the v2 response has been retired). Accordingly, the URL now reflects that language change (using `.../region-from-loc`). This endpoint now also requires a `signal_type` input parameter as there can be differences in grid regions depending on the type of data you are accessing.\n\n\n### v2 request:\n```python\nurl = \"https://api2.watttime.org/v2/ba-from-loc\"\nparams = {\n    \"latitude\": \"42.372\",\n    \"longitude\": \"-72.519\"\n}\n```\n\n### v2 response:\n```json\n{\n    \"id\": 169,\n    \"abbrev\": \"ISONE_WCMA\",\n    \"name\": \"ISONE Western/Central Massachusetts\"\n}\n```\n\n### v3 request\n```python\nurl = \"https://api.watttime.org/v3/region-from-loc\"\nparams = {\n    \"latitude\": \"42.372\",\n    \"longitude\": \"-72.519\",\n    \"signal_type\": \"co2_moer\"\n}\n```\n\n### v3 response:\n```json\n{\n    \"region\": \"ISONE_WCMA\",\n    \"region_full_name\": \"ISONE Western/Central Massachusetts\",\n    \"signal_type\": \"co2_moer\"\n}\n```\n\n# v2/ba-access\n\nThis endpoint provided a list of available regions and could be filtered to the subset accessible by the authenticated account. The new v3 endpoint provides a more comprehensive guide to what is available for your account on the API. It provides a hierarchical JSON output that describes the signals, regions, endpoints, models and any available associated metadata for available data (in that hierarchical order).\n\n### v2 request:\n```python\nurl = \"https://api2.watttime.org/v2/ba-access\"\nparams = {\n    \"all\": \"false\"\n}\n```\n\n### v2 response:\n```json\n{\n  \"ba\": \"CAISO_NORTH\",\n  \"name\": \"California ISO Northern\",\n  \"access\": true,\n  \"datatype\": \"MOER\"\n}\n```\n\n### v3 request\n```python\nurl = \"https://api.watttime.org/v3/my-access\"\nparams = {}\n```\n\n### v3 response:\n```json\n{\n  \"signal_types\": [\n    {\n      \"signal_type\": \"co2_moer\",\n      \"regions\": [\n        {\n          \"region\": \"PJM_NJ\",\n          \"region_full_name\": \"PJM New Jersey\",\n          \"parent\": \"PJM\",\n          \"data_point_period_seconds\": 300,\n          \"endpoints\": [\n            {\n              \"endpoint\": \"v3/forecast\",\n              \"models\": [\n                {\n                  \"model\": \"2023-08-24\",\n                  \"data_start\": \"2021-08-24\",\n                  \"train_start\": \"2021-08-24\",\n                  \"train_end\": \"2021-08-24\"\n                }\n              ]\n            },\n            {\n              \"endpoint\": \"v3/historical\",\n              \"models\": [\n                {\n                  \"model\": \"2023-08-24\",\n                  \"data_start\": \"2021-08-24\",\n                  \"train_start\": \"2021-08-24\",\n                  \"train_end\": \"2021-08-24\",\n                  \"type\": \"binned_regression\"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n```\n\n\n# v2/index\nThis endpoint provides the most recent marginal carbon intensity value for the local grid. It provided either a percentile value, a raw MOER value, or both, depending on the request parameters. Since there are two types of data available from this endpoint, we'll address the differences for each separately.\n\n## v2/index, \"style\": \"percent\"\nThe URL and schema structure have only slightly changed from v2 to v3. Besides a new URL, `\"style\": \"percent\"` is replaced by `\"signal_type\": \"co2_moer\"` in the request parameters. In addition, the underlying calculation of the percentile has been changed. In v2, the percentile is calculated based on the 30-day historical sample of MOER values. In v3, the percentile is calculated based on the upcoming 24 hours of MOER forecast values.\n\n### v2/index request for percentile value:\n```python\nurl = \"https://api2.watttime.org/index\"\nparams = {\n    \"ba\": \"CAISO_NORTH\",\n    \"style\": \"moer\"\n}\n```\n\n### v3 request for MOER index value from v3/signal-index:\n```python\nurl = \"https://api.watttime.org/v3/signal-index\"\nparams = {\n    \"region\": \"CAISO_NORTH\",\n    \"signal_type\": \"co2_moer\"\n}\n```\n\n## v2/index, \"style\": \"moer\"\n`\"style\": \"moer\"` is replaced by `\"signal_type\": \"co2_moer\"` in the request parameters.\n\n### v2/index request for MOER value:\n\n```python\nurl = \"https://api2.watttime.org/index\"\nparams = {\n    \"ba\": \"CAISO_NORTH\",\n    \"style\": \"moer\"\n}\n```\nThere are two options for how you translate this v2 request to v3. You can get recent data from the /historical endpoint (higher accuracy, slightly older), or you can request the first point of the forecast (guaranteed to be less than 5 minutes old for `co2_moer`, lower accuracy).\n\n### v3 request for MOER value from v3/historical:\n\n```python\nurl = \"https://api.watttime.org/v3/historical\"\nparams = {\n    \"region\": \"CAISO_NORTH\",\n    \"start\": \"2022-07-15T00:00+00:00\",\n    \"end\": \"2022-07-15T00:05+00:00\",\n    \"signal_type\": \"co2_moer\",\n}\n```\n\n### v3 request for MOER value from v3/forecast:\n\n```python\nurl = \"https://api.watttime.org/v3/forecast\"\nparams = {\n    \"region\": \"CAISO_NORTH\",\n    \"signal_type\": \"co2_moer\",\n    \"horizon_hours: 0,\n}\n```\n\n# v2/data\nThis endpoint was used to obtain historical MOER data (e.g. CO2 lbs/MWh) for a specified grid region or location (latitude & longitude pair). Since this request was meant for historical data, in v3 we're making all “historical” data available from an endpoint called `historical`. Also, in v3, we've eliminated the option to use lat/lon here, so you'll need to first determine the region and use that as an input parameter here. In v2, if the optional parameters `starttime` and `endtime` were omitted, the response would contain the latest available value. In v3, the `start` and `end` parameters are required.\n\n### v2 request\n```python\nurl = \"https://api2.watttime.org/v2/data\"\nparams = {\n    \"ba\": \"CAISO_NORTH\",\n    \"starttime\": \"2022-11-16T20:30:00-0800\",\n    \"endtime\": \"2022-11-16T20:45:00-0800\"\n}\n```\n\n### v3 request\n```python\nurl = \"https://api.watttime.org/v3/historical\"\nparams = {\n    \"region\": \"CAISO_NORTH\",\n    \"start\": \"2022-07-15T00:00+00:00\",\n    \"end\": \"2022-07-15T00:05+00:00\",\n    \"signal_type\": \"co2_moer\",\n}\n```\n\n# v2/historical\nThis endpoint provided a zip file containing monthly .csv files with the MOER values (e.g. CO2 lbs/MWh) and timestamps for a requested region for the past two years or more. You can still get historical data using the new historical endpoint, and using the required parameters `start`, `end`, and `signal_type`.\n\nThe response is the biggest difference here. We've retired this csv output feature in favor of standardizing on the JSON response type. The request to `/v3/historical` is limited to 32 days per request. We've developed an SDK that you can use to pull data in larger chunks than just one month at a time, and translate the data into various formats. If you're still having trouble getting the data in the format you'd like, please contact support@watttime.org for assistance.\n\n### v2 request\n```python\nurl = \"https://api2.watttime.org/v2/historical\"\nparams = {\n    \"ba\": \"CAISO_NORTH\",\n}\n```\n\n### v3 request\n```python\nurl = \"https://api.watttime.org/v3/historical\"\nparams = {\n    \"region\": \"CAISO_NORTH\",\n    \"start\": \"2022-07-15T00:00+00:00\",\n    \"end\": \"2022-07-15T00:05+00:00\",\n    \"signal_type\": \"co2_moer\",\n}\n```\n\n# v2/forecast\n\nThis endpoint provided a forecast of the MOERs (e.g. CO2 lbs/MWh) for a specified region, by default the latest forecast was returned. The `/v3/forecast` endpoint is now used solely to get the most recent available forecast, the response is simplified because it only returns one set of forecast values. In v2, a 72-hour forecast could be requested using the optional parameter `extended_forecast` and in v3 you can request the specific length of `forecast_horizon` that you'd like from 0-72 hours.\n\n### v2 request (latest forecast)\n```python\nurl = \"https://api2.watttime.org/v2/forecast\"\nparams = {\n    \"ba\": \"CAISO_NORTH\",\n    \"extended_forecast\": \"True\",\n}\n```\n\n### v3 request (latest forecast)\n```python\nurl = \"https://api.watttime.org/v3/forecast\"\nparams = {\n    \"region\": \"CAISO_NORTH\",\n    \"signal_type\": \"co2_moer\",\n    \"horizon_hours\": 72,\n}\n```\n\nIn v2, a batch of historical forecasts could be requested using the optional parameters `starttime` and `endtime` to bound the `generated_at` time. In v3, we've moved this request to a new endpoint and the response is a similar but nested version of the v3/forecast response since it is designed for returning multiple sets of forecasts, one for each `generated_at` time.\n\n### v2 request (historical forecast)\n```python\nurl = \"https://api2.watttime.org/v2/forecast\"\nparams = {\n    \"ba\": \"CAISO_NORTH\",\n    \"starttime\": \"2023-07-15T00:00+00:00\",\n    \"endtime\": \"2023-07-15T00:05+00:00\",\n}\n```\n\n### v3 request (historical forecast)\n```python\nurl = \"https://api.watttime.org/v3/forecast/historical\"\nparams = {\n    \"region\": \"CAISO_NORTH\",\n    \"signal_type\": \"co2_moer\",\n    \"start\": \"2023-07-15T00:00+00:00\",\n    \"end\": \"2023-07-15T00:05+00:00\",\n}\n```\n\n# v2/maps\nThis endpoint provided a GeoJSON of the grid region boundary for all regions that WattTime covers globally. The biggest change here besides the URL, is that a `signal_type` is now required in the request since there are different maps for each. The response also includes the `signal_type` and is otherwise identical to the v2 response.\n\n### v2 request\n```python\nurl = \"https://api2.watttime.org/v2/maps\"\n```\n\n### v3 request\n```python\nurl = \"https://api.watttime.org/v3/maps\"\nparams = {\n    \"signal_type\": \"co2_moer\",\n}\n```\n\n# v2/avgemissions\n\nAverage emissions have been rolled into the standard data path under the signal_type `co2_aoer`. The request and response schema otherwise matches the above schema for v3/historical data. In order to distinguish between the default model (full quality) and the backup model (imputed, lower quality) data points, there is a new query parameter `include_imputed_marker` that will provide a point-wise indication in the response of data points that were generated with imputed data (`imputed_data_used=true`, equivalent to the old `3.0-modeled` version).\n\n### v2 request\n```python\nurl = \"https://api2.watttime.org/v2/avgemissions\"\nparams = {\n    \"ba\": \"CAISO_NORTH\",\n}\n```\n\n### v3 request\n```python\nurl = \"https://api.watttime.org/v3/historical\"\nparams = {\n    \"region\": \"CAISO\",\n    \"signal_type\": \"co2_aoer\",\n    \"start\": \"2023-07-15T00:00+00:00\",\n    \"end\": \"2023-07-15T00:05+00:00\",\n    \"include_imputed_marker\": True,\n}\n```\n\n# Version mappings\n\n|APIv2 `version`|APIv3 `model`|`signal_type`|model `type`|BA/Regions|\n|-|-|-|-|-|\n|3.0|not available|co2_moer|binned_regression|*|\n|3.1|not available|co2_moer|binned_regression|IE|\n|3.0|2022-08-01|co2_aoer|average|*|\n|3.2|2022-10-01|co2_moer; health_damage|binned_regression|All model_type = binned_regression|\n|3.2|2022-10-02|co2_moer|average|All model_type = average|\n|not available|2022-12-31|co2_moer|proxy|All model_type = proxy|\n|not available|2023-03-01|co2_moer|binned_regression|Some model_type = binned_regression|\n|not available|2023-06-13|co2_moer|binned_regression|MX_SIN|\n","x-displayName":"Transitioning from APIv2 to APIv3"},{"name":"Technical Support","description":"For technical questions related to this API and real-time emissions data, please contact support@WattTime.org\n\nIf you are experiencing an outage, please check the WattTime API Status Page to get the status of known outages, and if none are shown, please proceed to contact support@WattTime.org\n\n✅ **For the fastest resolution of your issue, please also include the following along with your inquiry:**\n* HTTP error codes received\n* The code snippet for your query/API request\n* Any relevant screen capture images\n* A short description of what you are trying to accomplish\n* Is this the first attempt? Or, a new error for something that used to work?\n","x-displayName":"Technical Support"}],"paths":{"/register":{"post":{"tags":["Authentication"],"summary":"Register New User","description":"Provide basic information to self-register for an account.\n\n**Note:** The `/register` endpoint accepts the parameters in the body of the request. It does not accept them in the URL as a query string, because that isn't as secure. The input parameters should be included as a JSON object (in the body), as shown in the sample code on the right.","operationId":"post_username_register_post","parameters":[{"name":"username","in":"query","required":true,"schema":{"type":"string","description":"name of user that will be used in subsequent calls","title":"Username"},"description":"name of user that will be used in subsequent calls","example":"freddo"},{"name":"password","in":"query","required":true,"schema":{"type":"string","description":"user password. Password must be at least 8 characters, with at least 1 of each alpha, number and special characters.","title":"Password"},"description":"user password. Password must be at least 8 characters, with at least 1 of each alpha, number and special characters.","example":"the_frog"},{"name":"email","in":"query","required":true,"schema":{"type":"string","format":"email","description":"valid email address. The email address used to register will only be used for communication regarding API outages and updates. The email address will not be shared or used for any other promotional purpose. For others in your organization who would like these updates, they can subscribe to our Status Page.","title":"Email"},"description":"valid email address. The email address used to register will only be used for communication regarding API outages and updates. The email address will not be shared or used for any other promotional purpose. For others in your organization who would like these updates, they can subscribe to our Status Page.","example":"freddo@frog.org"},{"name":"org","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"organization name","title":"Org"},"description":"organization name","example":"freds world"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegisterResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"x-codeSamples":[{"lang":"Python","source":"\n# To register, use the code below. Please note that for these code examples we are using filler values for username\n# (freddo), password (the_frog), email (freddo@frog.org), org (freds world) and you should replace each if you are\n# copying and pasting this code.\n\nimport requests\nregister_url = 'https://api.watttime.org/register'\nparams = {'username': 'freddo',\n         'password': 'the_frog',\n         'email': 'freddo@frog.org',\n         'org': 'freds world'}\nrsp = requests.post(register_url, json=params)\nprint(rsp.text)\n","label":"Python"}]}},"/login":{"get":{"tags":["Authentication"],"summary":"Login & Obtain Token","description":"Use HTTP basic auth to exchange username and password for an access token. Remember that you need to include this token in an authorization bearer header for all subsequent data calls. This header has the form: `Authorization: Bearer <your_token>`\n\n**Note:** Token expires after 30 minutes. If a data call returns `HTTP 401` error code, you will need to call `/login` again to receive a new token.","operationId":"get_token_login_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginResponse"}}}}},"x-codeSamples":[{"lang":"Python","source":"\n# To login and obtain an access token, use this code:\n\nimport requests\nfrom requests.auth import HTTPBasicAuth\nlogin_url = 'https://api.watttime.org/login'\nrsp = requests.get(login_url, auth=HTTPBasicAuth('freddo', 'the_frog'))\nTOKEN = rsp.json()['token']\nprint(rsp.json())\n","label":"Python"}]}},"/password":{"get":{"tags":["Authentication"],"summary":"Password Reset","description":"Provide your `username` to request an email be sent to you with password reset instructions.","operationId":"get_password_password_get","parameters":[{"name":"username","in":"query","required":true,"schema":{"type":"string","description":"name of user that will be used in subsequent calls","title":"Username"},"description":"name of user that will be used in subsequent calls","example":"freddo"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PasswordResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"x-codeSamples":[{"lang":"Python","source":"\n# To reset your password, use this code:\n\nimport requests\npassword_url = 'https://api.watttime.org/password/?username=freddo'\nrsp = requests.get(password_url)\nprint(rsp.json())\n","label":"Python"}]}},"/v3/region-from-loc":{"get":{"tags":["GET Regions and Maps"],"summary":"Determine Grid Region","description":"Emissions intensity varies by location, specifically the location where an energy-using device is interconnected to the grid. This endpoint, provided with latitude and longitude parameters, returns the details of the grid region serving that location, if known, or a Coordinates not found error if the point lies outside of known/covered regions.","operationId":"get_reg_loc_v3_region_from_loc_get","parameters":[{"name":"signal_type","in":"query","required":true,"schema":{"enum":["co2_moer","co2_aoer","health_damage"],"type":"string","description":"signal_type for which to look up region","title":"Signal Type"},"description":"signal_type for which to look up region","example":"co2_moer"},{"name":"latitude","in":"query","required":true,"schema":{"type":"number","description":"Latitude of desired location","title":"Latitude"},"description":"Latitude of desired location","example":-72.519},{"name":"longitude","in":"query","required":true,"schema":{"type":"number","description":"Longitude of desired location","title":"Longitude"},"description":"Longitude of desired location","example":42.372}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegionLocResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"x-codeSamples":[{"lang":"Python","source":"\nimport requests\n\nurl = \"https://api.watttime.org/v3/region-from-loc\"\n\n# Provide your TOKEN here, see https://docs.watttime.org/#tag/Authentication/operation/get_token_login_get for more information\nTOKEN = \"\"\nheaders = {\"Authorization\": f\"Bearer {TOKEN}\"}\nparams = {\"latitude\": \"42.372\", \"longitude\": \"-72.519\", \"signal_type\": \"co2_moer\"}\nresponse = requests.get(url, headers=headers, params=params)\nresponse.raise_for_status()\nprint(response.json())\n","label":"Python"}]}},"/v3/maps":{"get":{"tags":["GET Regions and Maps"],"summary":"Grid Region Map Geometry","description":"Provides a geojson of the grid region boundary for all regions that WattTime covers globally. Check when the geojson was last updated using the `last_updated` value in the `meta` object of the geojson. Access to this endpoint is restricted to customers with ANALYST or PRO subscriptions. The response is a geojson response, that is a Feature Collection with properties that describe each region, and multipolygon geometry made up of coordinates which define the boundary for each region. The `meta` object contains the date-time that the geojson was last updated and the associated `signal_type`.","operationId":"get_v3_map_v3_maps_get","parameters":[{"description":"Use to select any available `signal_type` which is authorized for your account","required":true,"schema":{"anyOf":[{},{"$ref":"#/components/schemas/V3Signals"}],"title":"Signal Type","description":"Use to select any available `signal_type` which is authorized for your account"},"example":"co2_moer","name":"signal_type","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Map"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"x-codeSamples":[{"lang":"Python","source":"import requests\n\nurl = \"https://api.watttime.org/v3/maps\"\n\n# Provide your TOKEN here, see https://docs.watttime.org/#tag/Authentication/operation/get_token_login_get for more information\nTOKEN = \"\"\nheaders = {\"Authorization\": f\"Bearer {TOKEN}\"}\nparams = {\n    \"signal_type\": \"co2_moer\",\n}\nresponse = requests.get(url, headers=headers, params=params)\nresponse.raise_for_status()\nprint(response.json())\n","label":"Python"}]}},"/v3/signal-index":{"get":{"tags":["GET Index"],"summary":"Get the current CO2 MOER index","description":"Returns the current index value for the specified `region` for the `co2_moer` signal type. This 0-100 value is the statistical percentile of the current MOER relative to the upcoming 24 hours of forecast MOER values for the specified location (100=dirtiest, 0=cleanest). Values are updated periodically (e.g. at 5-minute frequency), and each value is valid starting from its `point_time` for the duration described in `data_point_period_seconds`. No historical query is available for this endpoint.\n\nData from this endpoint is available for free to all users in all covered regions.","operationId":"get_signal_index_v3_signal_index_get","parameters":[{"description":"Region abbreviation associated with location, from result of query to `/v3/region-from-loc`","required":true,"schema":{"type":"string","title":"Region","description":"Region abbreviation associated with location, from result of query to `/v3/region-from-loc`"},"example":"CAISO_NORTH","name":"region","in":"query"},{"description":"Only `co2_moer` indices are currently available.","required":false,"schema":{"type":"string","enum":["co2_moer"],"title":"Signal Type","description":"Only `co2_moer` indices are currently available.","default":"co2_moer"},"example":"co2_moer","name":"signal_type","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/V3SignalIndexForecastResponse"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Unprocessable Entity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"x-codeSamples":[{"lang":"Python","source":"import requests\n\nurl = \"https://api.watttime.org/v3/signal-index\"\n\n# Provide your TOKEN here, see https://docs.watttime.org/#tag/Authentication/operation/get_token_login_get for more information\nTOKEN = \"\"\nheaders = {\"Authorization\": f\"Bearer {TOKEN}\"}\nparams = {\n    \"region\": \"CAISO_NORTH\",\n    \"signal_type\": \"co2_moer\",\n}\nresponse = requests.get(url, headers=headers, params=params)\nresponse.raise_for_status()\nprint(response.json())\n","label":"Python"}]}},"/v3/forecast":{"get":{"tags":["GET Forecast"],"summary":"Get the most recent forecast","description":"Returns the most recently generated forecast for the specified `region` and `signal_type`. Forecasts are\ngenerated periodically (e.g. at 5-minute frequency, this frequency is described in the `generated_at_period_seconds`\nmetadata), and there is a `data` list made up of `point_time` and `value` pairs in the forecast horizon (e.g. a\n24-hr forecast horizon with 5-min frequency results in 288 values). Each forecast response is valid starting from its\n`generated_at` time until it is superseded by a new forecast with a new `generated_at` time, and each `point_time`\nin the `data` list is valid from its `point_time` for the duration described in `data_point_period_seconds`.","operationId":"get_current_forecast_v3_forecast_get","parameters":[{"description":"Region abbreviation associated with location, from result of query to `/v3/region-from-loc`","required":true,"schema":{"type":"string","title":"Region","description":"Region abbreviation associated with location, from result of query to `/v3/region-from-loc`"},"example":"CAISO_NORTH","name":"region","in":"query"},{"description":"Use to select any available `signal_type` which is authorized for your account","required":true,"schema":{"anyOf":[{"$ref":"#/components/schemas/V3Signals"},{}],"title":"Signal Type","description":"Use to select any available `signal_type` which is authorized for your account"},"example":"co2_moer","name":"signal_type","in":"query"},{"description":"Use to return different models from defaults.","required":false,"schema":{"type":"string","format":"date","title":"Model","description":"Use to return different models from defaults."},"example":"2023-03-31","name":"model","in":"query"},{"description":"Length of forecast horizon in hours. Setting this parameter to `0` will return a single value of the most recently produced forecast","required":false,"schema":{"type":"integer","maximum":72,"minimum":0,"title":"Horizon Hours","description":"Length of forecast horizon in hours. Setting this parameter to `0` will return a single value of the most recently produced forecast","default":24},"name":"horizon_hours","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/V3SingleForecastResponse"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Unprocessable Entity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"x-codeSamples":[{"lang":"Python","source":"import requests\n\nurl = \"https://api.watttime.org/v3/forecast\"\n\n# Provide your TOKEN here, see https://docs.watttime.org/#tag/Authentication/operation/get_token_login_get for more information\nTOKEN = \"\"\nheaders = {\"Authorization\": f\"Bearer {TOKEN}\"}\nparams = {\n    \"region\": \"CAISO_NORTH\",\n    \"signal_type\": \"co2_moer\",\n}\nresponse = requests.get(url, headers=headers, params=params)\nresponse.raise_for_status()\nprint(response.json())\n","label":"Python"}]}},"/v3/forecast/historical":{"get":{"tags":["GET Forecast"],"summary":"Get a range of historical forecasted data","description":"Returns forecast data for the specified `region`, `signal_type`, and time period. The response contains a `data`\nlist made up of `generated_at` and `forecast` pairs that cover the requested time period. The `forecast` list here\nincludes all the values that were generated at the `generated_at` time.`start` and `end` are used to specify which\n`generated_at` forecasts will be returned. Individual queries are limited to 24 hours of `generated_at` forecasts\n(the range of `start` to `end`; this limit equals 288 `generated_at` times with 288 forecast values each).","operationId":"get_historical_forecast_v3_forecast_historical_get","parameters":[{"description":"(inclusive) ISO8601-compliant timezone-aware date string indicating earliest desired forecast, _used to select the first `generated_at` time_","required":true,"schema":{"type":"string","format":"date-time","title":"Start","description":"(inclusive) ISO8601-compliant timezone-aware date string indicating earliest desired forecast, _used to select the first `generated_at` time_"},"example":"2023-03-31T13:42:00Z","name":"start","in":"query"},{"description":"(inclusive) ISO8601-compliant timezone-aware date string indicating latest desired forecast, _used to select the last `generated_at` time_","required":true,"schema":{"type":"string","format":"date-time","title":"End","description":"(inclusive) ISO8601-compliant timezone-aware date string indicating latest desired forecast, _used to select the last `generated_at` time_"},"example":"2023-03-31T13:42:00Z","name":"end","in":"query"},{"description":"Region abbreviation associated with location, from result of query to `/v3/region-from-loc`","required":true,"schema":{"type":"string","title":"Region","description":"Region abbreviation associated with location, from result of query to `/v3/region-from-loc`"},"example":"CAISO_NORTH","name":"region","in":"query"},{"description":"Use to select any available `signal_type` which is authorized for your account","required":true,"schema":{"anyOf":[{"$ref":"#/components/schemas/V3Signals"},{}],"title":"Signal Type","description":"Use to select any available `signal_type` which is authorized for your account"},"example":"co2_moer","name":"signal_type","in":"query"},{"description":"Use to return different models from defaults.","required":false,"schema":{"type":"string","format":"date","title":"Model","description":"Use to return different models from defaults."},"example":"2023-03-31","name":"model","in":"query"},{"description":"Length of forecast horizon in hours. Setting this parameter to `0` will return a single value of the most recently produced forecast","required":false,"schema":{"type":"integer","maximum":72,"minimum":0,"title":"Horizon Hours","description":"Length of forecast horizon in hours. Setting this parameter to `0` will return a single value of the most recently produced forecast","default":24},"name":"horizon_hours","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/V3ExtendedForecastResponse"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Unprocessable Entity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"x-codeSamples":[{"lang":"Python","source":"import requests\n\nurl = \"https://api.watttime.org/v3/forecast/historical\"\n\n# Provide your TOKEN here, see https://docs.watttime.org/#tag/Authentication/operation/get_token_login_get for more information\nTOKEN = \"\"\nheaders = {\"Authorization\": f\"Bearer {TOKEN}\"}\nparams = {\n    \"region\": \"CAISO_NORTH\",\n    \"start\": \"2023-07-15T00:00Z\",\n    \"end\": \"2023-07-15T01:00Z\",\n    \"signal_type\": \"co2_moer\",\n}\nresponse = requests.get(url, headers=headers, params=params)\nresponse.raise_for_status()\nprint(response.json())\n","label":"Python"}]}},"/v3/historical":{"get":{"tags":["GET Historical"],"summary":"Get a range of historical signal data","description":"Returns signal data (e.g. CO₂ MOER in lbs/MWh) for the specified `region`, `signal_type`, and time period. Values\nare published in near real-time, periodically (e.g. at 5-minute frequency), and each value is valid starting from\nits `point_time` for the duration described in `data_point_period_seconds`. The publishing delay (the difference\nbetween the `point_time` for the value and the time that value is available in the API) varies by grid region. In\nsome regions the data will be available within one minute after a certain `point_time`, in other regions there may\nbe a delay of up to a few hours. Each query is limited to 32 days of data. Individual data point values may be\nupdated at any time after publishing (e.g. if better source data is obtained).","operationId":"get_historical_datapoint_v3_historical_get","parameters":[{"description":"(inclusive) ISO8601-compliant timezone-aware date string indicating earliest desired data, _used to select the first `point_time` included in the response_","required":true,"schema":{"type":"string","format":"date-time","title":"Start","description":"(inclusive) ISO8601-compliant timezone-aware date string indicating earliest desired data, _used to select the first `point_time` included in the response_"},"example":"2023-03-31T13:42:00Z","name":"start","in":"query"},{"description":"(inclusive) ISO8601-compliant timezone-aware date string indicating latest desired data, _used to select the last `point_time` included in the response_","required":true,"schema":{"type":"string","format":"date-time","title":"End","description":"(inclusive) ISO8601-compliant timezone-aware date string indicating latest desired data, _used to select the last `point_time` included in the response_"},"example":"2023-03-31T13:42:00Z","name":"end","in":"query"},{"description":"Region abbreviation associated with location, from result of query to `/v3/region-from-loc`","required":true,"schema":{"type":"string","title":"Region","description":"Region abbreviation associated with location, from result of query to `/v3/region-from-loc`"},"example":"CAISO_NORTH","name":"region","in":"query"},{"description":"Use to select any available `signal_type` which is authorized for your account","required":true,"schema":{"allOf":[{"$ref":"#/components/schemas/V3Signals"}],"description":"Use to select any available `signal_type` which is authorized for your account"},"example":"co2_moer","name":"signal_type","in":"query"},{"description":"Use to return different models from defaults.","required":false,"schema":{"type":"string","format":"date","title":"Model","description":"Use to return different models from defaults."},"example":"2022-10-01","name":"model","in":"query"},{"description":"Use to return whether or not the value associated with a `point_time` is generated with imputed data.","required":false,"schema":{"type":"boolean","title":"Include Imputed Marker","description":"Use to return whether or not the value associated with a `point_time` is generated with imputed data.","default":false},"example":true,"name":"include_imputed_marker","in":"query"},{"description":"Filter results for data newer than the provided datetime.","required":false,"schema":{"type":"string","format":"date-time","title":"Updated Since","description":"Filter results for data newer than the provided datetime."},"example":"2022-01-01T00:00:00+00:00","name":"updated_since","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/V3Response"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Unprocessable Entity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"x-codeSamples":[{"lang":"Python","source":"import requests\n\nurl = \"https://api.watttime.org/v3/historical\"\n\n# Provide your TOKEN here, see https://docs.watttime.org/#tag/Authentication/operation/get_token_login_get for more information\nTOKEN = \"\"\nheaders = {\"Authorization\": f\"Bearer {TOKEN}\"}\nparams = {\n    \"region\": \"CAISO_NORTH\",\n    \"start\": \"2022-07-15T00:00+00:00\",\n    \"end\": \"2022-07-15T00:05+00:00\",\n    \"signal_type\": \"co2_moer\",\n}\nresponse = requests.get(url, headers=headers, params=params)\nresponse.raise_for_status()\nprint(response.json())\n","label":"Python"}]}},"/v3/my-access":{"get":{"tags":["GET Account Access"],"summary":"Get information about what your account can access","description":"This endpoint describes the data that your account has access to. You can use it to plan your data queries or to programmatically monitor for updates (e.g. new regions, new models, etc.).\n\nReturns a nested JSON response containing each combination of `signal_type`, `region`, `endpoint`, and `model` along with additional metadata that applies to each combination.","operationId":"get_full_my_access_hypercube_v3_my_access_get","parameters":[{"description":"Region abbreviation associated with location, from result of query to `/v3/region-from-loc`","required":false,"schema":{"type":"string","title":"Region","description":"Region abbreviation associated with location, from result of query to `/v3/region-from-loc`"},"example":"CAISO_NORTH","name":"region","in":"query"},{"description":"Use to select any available `signal_type` which is authorized for your account","required":false,"schema":{"anyOf":[{"$ref":"#/components/schemas/V3Signals"},{}],"title":"Signal Type","description":"Use to select any available `signal_type` which is authorized for your account"},"example":"co2_moer","name":"signal_type","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PYHypercube"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Unprocessable Entity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"x-codeSamples":[{"lang":"Python","source":"import requests\n\nurl = \"https://api.watttime.org/v3/my-access\"\n\n# Provide your TOKEN here, see https://docs.watttime.org/#tag/Authentication/operation/get_token_login_get for more information\nTOKEN = \"\"\nheaders = {\"Authorization\": f\"Bearer {TOKEN}\"}\nparams = {}\nresponse = requests.get(url, headers=headers, params=params)\nresponse.raise_for_status()\nprint(response.json())\n","label":"Python"}]}}},"components":{"schemas":{"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LoginResponse":{"properties":{"token":{"type":"string","title":"Token"}},"type":"object","required":["token"],"title":"LoginResponse","example":{"token":"abcdef0123456789fedcabc"}},"PasswordResponse":{"properties":{"ok":{"type":"string","title":"Ok"}},"type":"object","required":["ok"],"title":"PasswordResponse","example":{"ok":"Please check your email for the password reset link"}},"RegionLocResponse":{"properties":{"region":{"type":"string","title":"Region"},"region_full_name":{"type":"string","title":"Region Full Name"},"signal_type":{"type":"string","title":"Signal Type"}},"type":"object","required":["region","region_full_name","signal_type"],"title":"RegionLocResponse","example":{"region":"ISONE_WCMA","region_full_name":"ISONE Western/Central Massachusetts","signal_type":"co2_moer"}},"RegisterResponse":{"properties":{"user":{"type":"string","title":"User"},"ok":{"type":"string","title":"Ok"}},"type":"object","required":["user","ok"],"title":"RegisterResponse","example":{"ok":"User created","user":"freddo"}},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"Feature":{"properties":{"type":{"type":"string","enum":["Feature"],"title":"Type"},"properties":{"$ref":"#/components/schemas/Properties"},"geometry":{"$ref":"#/components/schemas/Geometry"}},"type":"object","required":["type","properties","geometry"],"title":"Feature"},"Geometry":{"properties":{"type":{"type":"string","enum":["MultiPolygon"],"title":"Type"},"coordinates":{"items":{"items":{"items":{"items":{"type":"number"},"type":"array"},"type":"array"},"type":"array"},"type":"array","title":"Coordinates"}},"type":"object","required":["type","coordinates"],"title":"Geometry"},"Map":{"properties":{"type":{"type":"string","enum":["FeatureCollection"],"title":"Type"},"features":{"items":{"$ref":"#/components/schemas/Feature"},"type":"array","title":"Features"},"meta":{"$ref":"#/components/schemas/Meta"}},"type":"object","required":["type","features","meta"],"title":"Map"},"Meta":{"properties":{"last_updated":{"type":"string","format":"date-time","title":"Last Updated"},"signal_type":{"anyOf":[{"$ref":"#/components/schemas/V3Signals"},{}],"title":"Signal Type"}},"type":"object","required":["last_updated","signal_type"],"title":"Meta"},"Properties":{"properties":{"region":{"type":"string","title":"Region"},"region_full_name":{"type":"string","title":"Region Full Name"}},"type":"object","required":["region","region_full_name"],"title":"Properties"},"V3Signals":{"type":"string","enum":["co2_moer","co2_aoer","health_damage"],"title":"V3Signals","description":"An enumeration."},"APIV3DataResponseFormat":{"properties":{"point_time":{"type":"string","format":"date-time","title":"Point Time"},"value":{"type":"number","title":"Value"},"last_updated":{"type":"string","format":"date-time","title":"Last Updated"},"imputed_data_used":{"type":"boolean","title":"Imputed Data Used"}},"type":"object","required":["point_time","value"],"title":"APIV3DataResponseFormat","example":{"point_time":"2022-07-15T00:00:00+00:00","value":870,"last_updated":"2023-10-01T00:00:00+00:00","imputed_data_used":true}},"APIV3ExtendedForecastType":{"properties":{"generated_at":{"type":"string","format":"date-time","title":"Generated At"},"forecast":{"items":{"$ref":"#/components/schemas/APIV3DataResponseFormat"},"type":"array","maxItems":864,"minItems":1,"uniqueItems":true,"title":"Forecast"}},"type":"object","required":["generated_at","forecast"],"title":"APIV3ExtendedForecastType"},"BaseAPIV3ResponseFormat":{"properties":{"point_time":{"type":"string","format":"date-time","title":"Point Time"},"value":{"type":"number","title":"Value"}},"type":"object","required":["point_time","value"],"title":"BaseAPIV3ResponseFormat","example":{"point_time":"2022-07-15T00:00:00+00:00","value":870}},"ErrorResponse":{"properties":{"error":{"type":"string","title":"Error"},"message":{"type":"string","title":"Message"},"docs":{"type":"string","title":"Docs"}},"type":"object","required":["error","message","docs"],"title":"ErrorResponse","example":{"error":"INVALID_QUERY_PARAMS","msg":"You've provided invalid parameters in your query","docs":"https://docs.watttime.org/"}},"ModelTypes":{"enum":["average","binned_regression","heatrate","proxy","synthetic_proxy"],"title":"ModelTypes","description":"An enumeration."},"V3ExtendedForecastResponse":{"properties":{"data":{"items":{"$ref":"#/components/schemas/APIV3ExtendedForecastType"},"type":"array","title":"Data"},"meta":{"$ref":"#/components/schemas/V3ForecastMetadata"}},"type":"object","required":["data","meta"],"title":"V3ExtendedForecastResponse","example":{"data":[{"generated_at":"2022-07-15T00:00:00+00:00","forecast":[{"point_time":"2022-07-15T00:00:00+00:00","value":870},{"point_time":"2022-07-15T00:05:00+00:00","value":870},{"point_time":"2022-07-15T00:10:00+00:00","value":870},{"point_time":"2022-07-15T00:15:00+00:00","value":870},{"point_time":"2022-07-15T00:20:00+00:00","value":870},{"point_time":"2022-07-15T00:25:00+00:00","value":870},{"point_time":"2022-07-15T00:30:00+00:00","value":870},{"point_time":"2022-07-15T00:35:00+00:00","value":870},{"point_time":"2022-07-15T00:40:00+00:00","value":870},{"point_time":"2022-07-15T00:45:00+00:00","value":870},{"point_time":"2022-07-15T00:50:00+00:00","value":870},{"point_time":"2022-07-15T00:55:00+00:00","value":870},{"point_time":"2022-07-15T01:00:00+00:00","value":870},{"point_time":"2022-07-15T01:05:00+00:00","value":870},{"point_time":"2022-07-15T01:10:00+00:00","value":870},{"point_time":"2022-07-15T01:15:00+00:00","value":870},{"point_time":"2022-07-15T01:20:00+00:00","value":870},{"point_time":"2022-07-15T01:25:00+00:00","value":870},{"point_time":"2022-07-15T01:30:00+00:00","value":870},{"point_time":"2022-07-15T01:35:00+00:00","value":870},{"point_time":"2022-07-15T01:40:00+00:00","value":870},{"point_time":"2022-07-15T01:45:00+00:00","value":870},{"point_time":"2022-07-15T01:50:00+00:00","value":870},{"point_time":"2022-07-15T01:55:00+00:00","value":870},{"point_time":"2022-07-15T02:00:00+00:00","value":870},{"point_time":"2022-07-15T02:05:00+00:00","value":870},{"point_time":"2022-07-15T02:10:00+00:00","value":870},{"point_time":"2022-07-15T02:15:00+00:00","value":870},{"point_time":"2022-07-15T02:20:00+00:00","value":870},{"point_time":"2022-07-15T02:25:00+00:00","value":870},{"point_time":"2022-07-15T02:30:00+00:00","value":870},{"point_time":"2022-07-15T02:35:00+00:00","value":870},{"point_time":"2022-07-15T02:40:00+00:00","value":870},{"point_time":"2022-07-15T02:45:00+00:00","value":870},{"point_time":"2022-07-15T02:50:00+00:00","value":870},{"point_time":"2022-07-15T02:55:00+00:00","value":870},{"point_time":"2022-07-15T03:00:00+00:00","value":870},{"point_time":"2022-07-15T03:05:00+00:00","value":870},{"point_time":"2022-07-15T03:10:00+00:00","value":870},{"point_time":"2022-07-15T03:15:00+00:00","value":870},{"point_time":"2022-07-15T03:20:00+00:00","value":870},{"point_time":"2022-07-15T03:25:00+00:00","value":870},{"point_time":"2022-07-15T03:30:00+00:00","value":870},{"point_time":"2022-07-15T03:35:00+00:00","value":870},{"point_time":"2022-07-15T03:40:00+00:00","value":870},{"point_time":"2022-07-15T03:45:00+00:00","value":870},{"point_time":"2022-07-15T03:50:00+00:00","value":870},{"point_time":"2022-07-15T03:55:00+00:00","value":870},{"point_time":"2022-07-15T04:00:00+00:00","value":870},{"point_time":"2022-07-15T04:05:00+00:00","value":870},{"point_time":"2022-07-15T04:10:00+00:00","value":870},{"point_time":"2022-07-15T04:15:00+00:00","value":870},{"point_time":"2022-07-15T04:20:00+00:00","value":870},{"point_time":"2022-07-15T04:25:00+00:00","value":870},{"point_time":"2022-07-15T04:30:00+00:00","value":870},{"point_time":"2022-07-15T04:35:00+00:00","value":870},{"point_time":"2022-07-15T04:40:00+00:00","value":870},{"point_time":"2022-07-15T04:45:00+00:00","value":870},{"point_time":"2022-07-15T04:50:00+00:00","value":870},{"point_time":"2022-07-15T04:55:00+00:00","value":870},{"point_time":"2022-07-15T05:00:00+00:00","value":870},{"point_time":"2022-07-15T05:05:00+00:00","value":870},{"point_time":"2022-07-15T05:10:00+00:00","value":870},{"point_time":"2022-07-15T05:15:00+00:00","value":870},{"point_time":"2022-07-15T05:20:00+00:00","value":870},{"point_time":"2022-07-15T05:25:00+00:00","value":870},{"point_time":"2022-07-15T05:30:00+00:00","value":870},{"point_time":"2022-07-15T05:35:00+00:00","value":870},{"point_time":"2022-07-15T05:40:00+00:00","value":870},{"point_time":"2022-07-15T05:45:00+00:00","value":870},{"point_time":"2022-07-15T05:50:00+00:00","value":870},{"point_time":"2022-07-15T05:55:00+00:00","value":870},{"point_time":"2022-07-15T06:00:00+00:00","value":870},{"point_time":"2022-07-15T06:05:00+00:00","value":870},{"point_time":"2022-07-15T06:10:00+00:00","value":870},{"point_time":"2022-07-15T06:15:00+00:00","value":870},{"point_time":"2022-07-15T06:20:00+00:00","value":870},{"point_time":"2022-07-15T06:25:00+00:00","value":870},{"point_time":"2022-07-15T06:30:00+00:00","value":870},{"point_time":"2022-07-15T06:35:00+00:00","value":870},{"point_time":"2022-07-15T06:40:00+00:00","value":870},{"point_time":"2022-07-15T06:45:00+00:00","value":870},{"point_time":"2022-07-15T06:50:00+00:00","value":870},{"point_time":"2022-07-15T06:55:00+00:00","value":870},{"point_time":"2022-07-15T07:00:00+00:00","value":870},{"point_time":"2022-07-15T07:05:00+00:00","value":870},{"point_time":"2022-07-15T07:10:00+00:00","value":870},{"point_time":"2022-07-15T07:15:00+00:00","value":870},{"point_time":"2022-07-15T07:20:00+00:00","value":870},{"point_time":"2022-07-15T07:25:00+00:00","value":870},{"point_time":"2022-07-15T07:30:00+00:00","value":870},{"point_time":"2022-07-15T07:35:00+00:00","value":870},{"point_time":"2022-07-15T07:40:00+00:00","value":870},{"point_time":"2022-07-15T07:45:00+00:00","value":870},{"point_time":"2022-07-15T07:50:00+00:00","value":870},{"point_time":"2022-07-15T07:55:00+00:00","value":870},{"point_time":"2022-07-15T08:00:00+00:00","value":870},{"point_time":"2022-07-15T08:05:00+00:00","value":870},{"point_time":"2022-07-15T08:10:00+00:00","value":870},{"point_time":"2022-07-15T08:15:00+00:00","value":870},{"point_time":"2022-07-15T08:20:00+00:00","value":870},{"point_time":"2022-07-15T08:25:00+00:00","value":870},{"point_time":"2022-07-15T08:30:00+00:00","value":870},{"point_time":"2022-07-15T08:35:00+00:00","value":870},{"point_time":"2022-07-15T08:40:00+00:00","value":870},{"point_time":"2022-07-15T08:45:00+00:00","value":870},{"point_time":"2022-07-15T08:50:00+00:00","value":870},{"point_time":"2022-07-15T08:55:00+00:00","value":870},{"point_time":"2022-07-15T09:00:00+00:00","value":870},{"point_time":"2022-07-15T09:05:00+00:00","value":870},{"point_time":"2022-07-15T09:10:00+00:00","value":870},{"point_time":"2022-07-15T09:15:00+00:00","value":870},{"point_time":"2022-07-15T09:20:00+00:00","value":870},{"point_time":"2022-07-15T09:25:00+00:00","value":870},{"point_time":"2022-07-15T09:30:00+00:00","value":870},{"point_time":"2022-07-15T09:35:00+00:00","value":870},{"point_time":"2022-07-15T09:40:00+00:00","value":870},{"point_time":"2022-07-15T09:45:00+00:00","value":870},{"point_time":"2022-07-15T09:50:00+00:00","value":870},{"point_time":"2022-07-15T09:55:00+00:00","value":870},{"point_time":"2022-07-15T10:00:00+00:00","value":870},{"point_time":"2022-07-15T10:05:00+00:00","value":870},{"point_time":"2022-07-15T10:10:00+00:00","value":870},{"point_time":"2022-07-15T10:15:00+00:00","value":870},{"point_time":"2022-07-15T10:20:00+00:00","value":870},{"point_time":"2022-07-15T10:25:00+00:00","value":870},{"point_time":"2022-07-15T10:30:00+00:00","value":870},{"point_time":"2022-07-15T10:35:00+00:00","value":870},{"point_time":"2022-07-15T10:40:00+00:00","value":870},{"point_time":"2022-07-15T10:45:00+00:00","value":870},{"point_time":"2022-07-15T10:50:00+00:00","value":870},{"point_time":"2022-07-15T10:55:00+00:00","value":870},{"point_time":"2022-07-15T11:00:00+00:00","value":870},{"point_time":"2022-07-15T11:05:00+00:00","value":870},{"point_time":"2022-07-15T11:10:00+00:00","value":870},{"point_time":"2022-07-15T11:15:00+00:00","value":870},{"point_time":"2022-07-15T11:20:00+00:00","value":870},{"point_time":"2022-07-15T11:25:00+00:00","value":870},{"point_time":"2022-07-15T11:30:00+00:00","value":870},{"point_time":"2022-07-15T11:35:00+00:00","value":870},{"point_time":"2022-07-15T11:40:00+00:00","value":870},{"point_time":"2022-07-15T11:45:00+00:00","value":870},{"point_time":"2022-07-15T11:50:00+00:00","value":870},{"point_time":"2022-07-15T11:55:00+00:00","value":870},{"point_time":"2022-07-15T12:00:00+00:00","value":870},{"point_time":"2022-07-15T12:05:00+00:00","value":870},{"point_time":"2022-07-15T12:10:00+00:00","value":870},{"point_time":"2022-07-15T12:15:00+00:00","value":870},{"point_time":"2022-07-15T12:20:00+00:00","value":870},{"point_time":"2022-07-15T12:25:00+00:00","value":870},{"point_time":"2022-07-15T12:30:00+00:00","value":870},{"point_time":"2022-07-15T12:35:00+00:00","value":870},{"point_time":"2022-07-15T12:40:00+00:00","value":870},{"point_time":"2022-07-15T12:45:00+00:00","value":870},{"point_time":"2022-07-15T12:50:00+00:00","value":870},{"point_time":"2022-07-15T12:55:00+00:00","value":870},{"point_time":"2022-07-15T13:00:00+00:00","value":870},{"point_time":"2022-07-15T13:05:00+00:00","value":870},{"point_time":"2022-07-15T13:10:00+00:00","value":870},{"point_time":"2022-07-15T13:15:00+00:00","value":870},{"point_time":"2022-07-15T13:20:00+00:00","value":870},{"point_time":"2022-07-15T13:25:00+00:00","value":870},{"point_time":"2022-07-15T13:30:00+00:00","value":870},{"point_time":"2022-07-15T13:35:00+00:00","value":870},{"point_time":"2022-07-15T13:40:00+00:00","value":870},{"point_time":"2022-07-15T13:45:00+00:00","value":870},{"point_time":"2022-07-15T13:50:00+00:00","value":870},{"point_time":"2022-07-15T13:55:00+00:00","value":870},{"point_time":"2022-07-15T14:00:00+00:00","value":870},{"point_time":"2022-07-15T14:05:00+00:00","value":870},{"point_time":"2022-07-15T14:10:00+00:00","value":870},{"point_time":"2022-07-15T14:15:00+00:00","value":870},{"point_time":"2022-07-15T14:20:00+00:00","value":870},{"point_time":"2022-07-15T14:25:00+00:00","value":870},{"point_time":"2022-07-15T14:30:00+00:00","value":870},{"point_time":"2022-07-15T14:35:00+00:00","value":870},{"point_time":"2022-07-15T14:40:00+00:00","value":870},{"point_time":"2022-07-15T14:45:00+00:00","value":870},{"point_time":"2022-07-15T14:50:00+00:00","value":870},{"point_time":"2022-07-15T14:55:00+00:00","value":870},{"point_time":"2022-07-15T15:00:00+00:00","value":870},{"point_time":"2022-07-15T15:05:00+00:00","value":870},{"point_time":"2022-07-15T15:10:00+00:00","value":870},{"point_time":"2022-07-15T15:15:00+00:00","value":870},{"point_time":"2022-07-15T15:20:00+00:00","value":870},{"point_time":"2022-07-15T15:25:00+00:00","value":870},{"point_time":"2022-07-15T15:30:00+00:00","value":870},{"point_time":"2022-07-15T15:35:00+00:00","value":870},{"point_time":"2022-07-15T15:40:00+00:00","value":870},{"point_time":"2022-07-15T15:45:00+00:00","value":870},{"point_time":"2022-07-15T15:50:00+00:00","value":870},{"point_time":"2022-07-15T15:55:00+00:00","value":870},{"point_time":"2022-07-15T16:00:00+00:00","value":870},{"point_time":"2022-07-15T16:05:00+00:00","value":870},{"point_time":"2022-07-15T16:10:00+00:00","value":870},{"point_time":"2022-07-15T16:15:00+00:00","value":870},{"point_time":"2022-07-15T16:20:00+00:00","value":870},{"point_time":"2022-07-15T16:25:00+00:00","value":870},{"point_time":"2022-07-15T16:30:00+00:00","value":870},{"point_time":"2022-07-15T16:35:00+00:00","value":870},{"point_time":"2022-07-15T16:40:00+00:00","value":870},{"point_time":"2022-07-15T16:45:00+00:00","value":870},{"point_time":"2022-07-15T16:50:00+00:00","value":870},{"point_time":"2022-07-15T16:55:00+00:00","value":870},{"point_time":"2022-07-15T17:00:00+00:00","value":870},{"point_time":"2022-07-15T17:05:00+00:00","value":870},{"point_time":"2022-07-15T17:10:00+00:00","value":870},{"point_time":"2022-07-15T17:15:00+00:00","value":870},{"point_time":"2022-07-15T17:20:00+00:00","value":870},{"point_time":"2022-07-15T17:25:00+00:00","value":870},{"point_time":"2022-07-15T17:30:00+00:00","value":870},{"point_time":"2022-07-15T17:35:00+00:00","value":870},{"point_time":"2022-07-15T17:40:00+00:00","value":870},{"point_time":"2022-07-15T17:45:00+00:00","value":870},{"point_time":"2022-07-15T17:50:00+00:00","value":870},{"point_time":"2022-07-15T17:55:00+00:00","value":870},{"point_time":"2022-07-15T18:00:00+00:00","value":870},{"point_time":"2022-07-15T18:05:00+00:00","value":870},{"point_time":"2022-07-15T18:10:00+00:00","value":870},{"point_time":"2022-07-15T18:15:00+00:00","value":870},{"point_time":"2022-07-15T18:20:00+00:00","value":870},{"point_time":"2022-07-15T18:25:00+00:00","value":870},{"point_time":"2022-07-15T18:30:00+00:00","value":870},{"point_time":"2022-07-15T18:35:00+00:00","value":870},{"point_time":"2022-07-15T18:40:00+00:00","value":870},{"point_time":"2022-07-15T18:45:00+00:00","value":870},{"point_time":"2022-07-15T18:50:00+00:00","value":870},{"point_time":"2022-07-15T18:55:00+00:00","value":870},{"point_time":"2022-07-15T19:00:00+00:00","value":870},{"point_time":"2022-07-15T19:05:00+00:00","value":870},{"point_time":"2022-07-15T19:10:00+00:00","value":870},{"point_time":"2022-07-15T19:15:00+00:00","value":870},{"point_time":"2022-07-15T19:20:00+00:00","value":870},{"point_time":"2022-07-15T19:25:00+00:00","value":870},{"point_time":"2022-07-15T19:30:00+00:00","value":870},{"point_time":"2022-07-15T19:35:00+00:00","value":870},{"point_time":"2022-07-15T19:40:00+00:00","value":870},{"point_time":"2022-07-15T19:45:00+00:00","value":870},{"point_time":"2022-07-15T19:50:00+00:00","value":870},{"point_time":"2022-07-15T19:55:00+00:00","value":870},{"point_time":"2022-07-15T20:00:00+00:00","value":870},{"point_time":"2022-07-15T20:05:00+00:00","value":870},{"point_time":"2022-07-15T20:10:00+00:00","value":870},{"point_time":"2022-07-15T20:15:00+00:00","value":870},{"point_time":"2022-07-15T20:20:00+00:00","value":870},{"point_time":"2022-07-15T20:25:00+00:00","value":870},{"point_time":"2022-07-15T20:30:00+00:00","value":870},{"point_time":"2022-07-15T20:35:00+00:00","value":870},{"point_time":"2022-07-15T20:40:00+00:00","value":870},{"point_time":"2022-07-15T20:45:00+00:00","value":870},{"point_time":"2022-07-15T20:50:00+00:00","value":870},{"point_time":"2022-07-15T20:55:00+00:00","value":870},{"point_time":"2022-07-15T21:00:00+00:00","value":870},{"point_time":"2022-07-15T21:05:00+00:00","value":870},{"point_time":"2022-07-15T21:10:00+00:00","value":870},{"point_time":"2022-07-15T21:15:00+00:00","value":870},{"point_time":"2022-07-15T21:20:00+00:00","value":870},{"point_time":"2022-07-15T21:25:00+00:00","value":870},{"point_time":"2022-07-15T21:30:00+00:00","value":870},{"point_time":"2022-07-15T21:35:00+00:00","value":870},{"point_time":"2022-07-15T21:40:00+00:00","value":870},{"point_time":"2022-07-15T21:45:00+00:00","value":870},{"point_time":"2022-07-15T21:50:00+00:00","value":870},{"point_time":"2022-07-15T21:55:00+00:00","value":870},{"point_time":"2022-07-15T22:00:00+00:00","value":870},{"point_time":"2022-07-15T22:05:00+00:00","value":870},{"point_time":"2022-07-15T22:10:00+00:00","value":870},{"point_time":"2022-07-15T22:15:00+00:00","value":870},{"point_time":"2022-07-15T22:20:00+00:00","value":870},{"point_time":"2022-07-15T22:25:00+00:00","value":870},{"point_time":"2022-07-15T22:30:00+00:00","value":870},{"point_time":"2022-07-15T22:35:00+00:00","value":870},{"point_time":"2022-07-15T22:40:00+00:00","value":870},{"point_time":"2022-07-15T22:45:00+00:00","value":870},{"point_time":"2022-07-15T22:50:00+00:00","value":870},{"point_time":"2022-07-15T22:55:00+00:00","value":870},{"point_time":"2022-07-15T23:00:00+00:00","value":870},{"point_time":"2022-07-15T23:05:00+00:00","value":870},{"point_time":"2022-07-15T23:10:00+00:00","value":870},{"point_time":"2022-07-15T23:15:00+00:00","value":870},{"point_time":"2022-07-15T23:20:00+00:00","value":870},{"point_time":"2022-07-15T23:25:00+00:00","value":870},{"point_time":"2022-07-15T23:30:00+00:00","value":870},{"point_time":"2022-07-15T23:35:00+00:00","value":870},{"point_time":"2022-07-15T23:40:00+00:00","value":870},{"point_time":"2022-07-15T23:45:00+00:00","value":870},{"point_time":"2022-07-15T23:50:00+00:00","value":870},{"point_time":"2022-07-15T23:55:00+00:00","value":870}]}],"meta":{"data_point_period_seconds":300,"region":"CAISO_NORTH","warnings":[{"type":"EXAMPLE_WARNING","message":"This is just an example"}],"signal_type":"co2_moer","model":{"date":"2023-03-01"},"units":"lbs_co2_per_mwh","generated_at_period_seconds":300}}},"V3ForecastMetadata":{"properties":{"data_point_period_seconds":{"type":"integer","title":"Data Point Period Seconds"},"region":{"type":"string","title":"Region"},"signal_type":{"anyOf":[{},{"$ref":"#/components/schemas/V3Signals"}],"title":"Signal Type"},"units":{"type":"string","title":"Units"},"warnings":{"items":{"$ref":"#/components/schemas/WarningType"},"type":"array","title":"Warnings"},"model":{"$ref":"#/components/schemas/V3ModelMetadata"},"generated_at_period_seconds":{"type":"integer","title":"Generated At Period Seconds"}},"type":"object","required":["data_point_period_seconds","region","signal_type","units","warnings","generated_at_period_seconds"],"title":"V3ForecastMetadata","example":{"data_point_period_seconds":300,"region":"CAISO_NORTH","warnings":[{"type":"EXAMPLE_WARNING","message":"This is just an example"}],"signal_type":"co2_moer","model":{"date":"2023-03-01"},"units":"lbs_co2_per_mwh","generated_at_period_seconds":300}},"V3ModelMetadata":{"properties":{"date":{"type":"string","format":"date","title":"Date"},"type":{"$ref":"#/components/schemas/ModelTypes"}},"type":"object","required":["date"],"title":"V3ModelMetadata"},"V3SignalIndexForecastResponse":{"properties":{"data":{"items":{"$ref":"#/components/schemas/BaseAPIV3ResponseFormat"},"type":"array","title":"Data"},"meta":{"$ref":"#/components/schemas/V3SignalIndexMetadata"}},"type":"object","required":["data","meta"],"title":"V3SignalIndexForecastResponse","example":{"data":[{"point_time":"2022-07-15T00:00:00+00:00","value":870}]}},"V3SignalIndexMetadata":{"properties":{"data_point_period_seconds":{"type":"integer","title":"Data Point Period Seconds"},"region":{"type":"string","title":"Region"},"signal_type":{"type":"string","enum":["co2_moer"],"title":"Signal Type"},"units":{"type":"string","title":"Units"},"warnings":{"items":{"$ref":"#/components/schemas/WarningType"},"type":"array","title":"Warnings"},"model":{"$ref":"#/components/schemas/V3ModelMetadata"}},"type":"object","required":["data_point_period_seconds","region","signal_type","units","warnings"],"title":"V3SignalIndexMetadata","example":{"data_point_period_seconds":300,"region":"CAISO_NORTH","warnings":[{"type":"EXAMPLE_WARNING","message":"This is just an example"}],"signal_type":"co2_moer","model":{"type":"binned_regression","date":"2023-03-01"},"units":"lbs_co2_per_mwh"}},"V3SingleForecastMetadata":{"properties":{"data_point_period_seconds":{"type":"integer","title":"Data Point Period Seconds"},"region":{"type":"string","title":"Region"},"signal_type":{"anyOf":[{},{"$ref":"#/components/schemas/V3Signals"}],"title":"Signal Type"},"units":{"type":"string","title":"Units"},"warnings":{"items":{"$ref":"#/components/schemas/WarningType"},"type":"array","title":"Warnings"},"model":{"$ref":"#/components/schemas/V3ModelMetadata"},"generated_at_period_seconds":{"type":"integer","title":"Generated At Period Seconds"},"generated_at":{"type":"string","format":"date-time","title":"Generated At"}},"type":"object","required":["data_point_period_seconds","region","signal_type","units","warnings","generated_at_period_seconds","generated_at"],"title":"V3SingleForecastMetadata","example":{"data_point_period_seconds":300,"region":"CAISO_NORTH","warnings":[{"type":"EXAMPLE_WARNING","message":"This is just an example"}],"signal_type":"co2_moer","model":{"date":"2023-03-01"},"units":"lbs_co2_per_mwh","generated_at_period_seconds":300,"generated_at":"2022-07-15T00:00:00+00:00"}},"V3SingleForecastResponse":{"properties":{"data":{"items":{"$ref":"#/components/schemas/BaseAPIV3ResponseFormat"},"type":"array","title":"Data"},"meta":{"$ref":"#/components/schemas/V3SingleForecastMetadata"}},"type":"object","required":["data","meta"],"title":"V3SingleForecastResponse","example":{"data":[{"point_time":"2022-07-15T00:00:00+00:00","value":870},{"point_time":"2022-07-15T00:05:00+00:00","value":870},{"point_time":"2022-07-15T00:10:00+00:00","value":870},{"point_time":"2022-07-15T00:15:00+00:00","value":870},{"point_time":"2022-07-15T00:20:00+00:00","value":870},{"point_time":"2022-07-15T00:25:00+00:00","value":870},{"point_time":"2022-07-15T00:30:00+00:00","value":870},{"point_time":"2022-07-15T00:35:00+00:00","value":870},{"point_time":"2022-07-15T00:40:00+00:00","value":870},{"point_time":"2022-07-15T00:45:00+00:00","value":870},{"point_time":"2022-07-15T00:50:00+00:00","value":870},{"point_time":"2022-07-15T00:55:00+00:00","value":870},{"point_time":"2022-07-15T01:00:00+00:00","value":870},{"point_time":"2022-07-15T01:05:00+00:00","value":870},{"point_time":"2022-07-15T01:10:00+00:00","value":870},{"point_time":"2022-07-15T01:15:00+00:00","value":870},{"point_time":"2022-07-15T01:20:00+00:00","value":870},{"point_time":"2022-07-15T01:25:00+00:00","value":870},{"point_time":"2022-07-15T01:30:00+00:00","value":870},{"point_time":"2022-07-15T01:35:00+00:00","value":870},{"point_time":"2022-07-15T01:40:00+00:00","value":870},{"point_time":"2022-07-15T01:45:00+00:00","value":870},{"point_time":"2022-07-15T01:50:00+00:00","value":870},{"point_time":"2022-07-15T01:55:00+00:00","value":870},{"point_time":"2022-07-15T02:00:00+00:00","value":870},{"point_time":"2022-07-15T02:05:00+00:00","value":870},{"point_time":"2022-07-15T02:10:00+00:00","value":870},{"point_time":"2022-07-15T02:15:00+00:00","value":870},{"point_time":"2022-07-15T02:20:00+00:00","value":870},{"point_time":"2022-07-15T02:25:00+00:00","value":870},{"point_time":"2022-07-15T02:30:00+00:00","value":870},{"point_time":"2022-07-15T02:35:00+00:00","value":870},{"point_time":"2022-07-15T02:40:00+00:00","value":870},{"point_time":"2022-07-15T02:45:00+00:00","value":870},{"point_time":"2022-07-15T02:50:00+00:00","value":870},{"point_time":"2022-07-15T02:55:00+00:00","value":870},{"point_time":"2022-07-15T03:00:00+00:00","value":870},{"point_time":"2022-07-15T03:05:00+00:00","value":870},{"point_time":"2022-07-15T03:10:00+00:00","value":870},{"point_time":"2022-07-15T03:15:00+00:00","value":870},{"point_time":"2022-07-15T03:20:00+00:00","value":870},{"point_time":"2022-07-15T03:25:00+00:00","value":870},{"point_time":"2022-07-15T03:30:00+00:00","value":870},{"point_time":"2022-07-15T03:35:00+00:00","value":870},{"point_time":"2022-07-15T03:40:00+00:00","value":870},{"point_time":"2022-07-15T03:45:00+00:00","value":870},{"point_time":"2022-07-15T03:50:00+00:00","value":870},{"point_time":"2022-07-15T03:55:00+00:00","value":870},{"point_time":"2022-07-15T04:00:00+00:00","value":870},{"point_time":"2022-07-15T04:05:00+00:00","value":870},{"point_time":"2022-07-15T04:10:00+00:00","value":870},{"point_time":"2022-07-15T04:15:00+00:00","value":870},{"point_time":"2022-07-15T04:20:00+00:00","value":870},{"point_time":"2022-07-15T04:25:00+00:00","value":870},{"point_time":"2022-07-15T04:30:00+00:00","value":870},{"point_time":"2022-07-15T04:35:00+00:00","value":870},{"point_time":"2022-07-15T04:40:00+00:00","value":870},{"point_time":"2022-07-15T04:45:00+00:00","value":870},{"point_time":"2022-07-15T04:50:00+00:00","value":870},{"point_time":"2022-07-15T04:55:00+00:00","value":870},{"point_time":"2022-07-15T05:00:00+00:00","value":870},{"point_time":"2022-07-15T05:05:00+00:00","value":870},{"point_time":"2022-07-15T05:10:00+00:00","value":870},{"point_time":"2022-07-15T05:15:00+00:00","value":870},{"point_time":"2022-07-15T05:20:00+00:00","value":870},{"point_time":"2022-07-15T05:25:00+00:00","value":870},{"point_time":"2022-07-15T05:30:00+00:00","value":870},{"point_time":"2022-07-15T05:35:00+00:00","value":870},{"point_time":"2022-07-15T05:40:00+00:00","value":870},{"point_time":"2022-07-15T05:45:00+00:00","value":870},{"point_time":"2022-07-15T05:50:00+00:00","value":870},{"point_time":"2022-07-15T05:55:00+00:00","value":870},{"point_time":"2022-07-15T06:00:00+00:00","value":870},{"point_time":"2022-07-15T06:05:00+00:00","value":870},{"point_time":"2022-07-15T06:10:00+00:00","value":870},{"point_time":"2022-07-15T06:15:00+00:00","value":870},{"point_time":"2022-07-15T06:20:00+00:00","value":870},{"point_time":"2022-07-15T06:25:00+00:00","value":870},{"point_time":"2022-07-15T06:30:00+00:00","value":870},{"point_time":"2022-07-15T06:35:00+00:00","value":870},{"point_time":"2022-07-15T06:40:00+00:00","value":870},{"point_time":"2022-07-15T06:45:00+00:00","value":870},{"point_time":"2022-07-15T06:50:00+00:00","value":870},{"point_time":"2022-07-15T06:55:00+00:00","value":870},{"point_time":"2022-07-15T07:00:00+00:00","value":870},{"point_time":"2022-07-15T07:05:00+00:00","value":870},{"point_time":"2022-07-15T07:10:00+00:00","value":870},{"point_time":"2022-07-15T07:15:00+00:00","value":870},{"point_time":"2022-07-15T07:20:00+00:00","value":870},{"point_time":"2022-07-15T07:25:00+00:00","value":870},{"point_time":"2022-07-15T07:30:00+00:00","value":870},{"point_time":"2022-07-15T07:35:00+00:00","value":870},{"point_time":"2022-07-15T07:40:00+00:00","value":870},{"point_time":"2022-07-15T07:45:00+00:00","value":870},{"point_time":"2022-07-15T07:50:00+00:00","value":870},{"point_time":"2022-07-15T07:55:00+00:00","value":870},{"point_time":"2022-07-15T08:00:00+00:00","value":870},{"point_time":"2022-07-15T08:05:00+00:00","value":870},{"point_time":"2022-07-15T08:10:00+00:00","value":870},{"point_time":"2022-07-15T08:15:00+00:00","value":870},{"point_time":"2022-07-15T08:20:00+00:00","value":870},{"point_time":"2022-07-15T08:25:00+00:00","value":870},{"point_time":"2022-07-15T08:30:00+00:00","value":870},{"point_time":"2022-07-15T08:35:00+00:00","value":870},{"point_time":"2022-07-15T08:40:00+00:00","value":870},{"point_time":"2022-07-15T08:45:00+00:00","value":870},{"point_time":"2022-07-15T08:50:00+00:00","value":870},{"point_time":"2022-07-15T08:55:00+00:00","value":870},{"point_time":"2022-07-15T09:00:00+00:00","value":870},{"point_time":"2022-07-15T09:05:00+00:00","value":870},{"point_time":"2022-07-15T09:10:00+00:00","value":870},{"point_time":"2022-07-15T09:15:00+00:00","value":870},{"point_time":"2022-07-15T09:20:00+00:00","value":870},{"point_time":"2022-07-15T09:25:00+00:00","value":870},{"point_time":"2022-07-15T09:30:00+00:00","value":870},{"point_time":"2022-07-15T09:35:00+00:00","value":870},{"point_time":"2022-07-15T09:40:00+00:00","value":870},{"point_time":"2022-07-15T09:45:00+00:00","value":870},{"point_time":"2022-07-15T09:50:00+00:00","value":870},{"point_time":"2022-07-15T09:55:00+00:00","value":870},{"point_time":"2022-07-15T10:00:00+00:00","value":870},{"point_time":"2022-07-15T10:05:00+00:00","value":870},{"point_time":"2022-07-15T10:10:00+00:00","value":870},{"point_time":"2022-07-15T10:15:00+00:00","value":870},{"point_time":"2022-07-15T10:20:00+00:00","value":870},{"point_time":"2022-07-15T10:25:00+00:00","value":870},{"point_time":"2022-07-15T10:30:00+00:00","value":870},{"point_time":"2022-07-15T10:35:00+00:00","value":870},{"point_time":"2022-07-15T10:40:00+00:00","value":870},{"point_time":"2022-07-15T10:45:00+00:00","value":870},{"point_time":"2022-07-15T10:50:00+00:00","value":870},{"point_time":"2022-07-15T10:55:00+00:00","value":870},{"point_time":"2022-07-15T11:00:00+00:00","value":870},{"point_time":"2022-07-15T11:05:00+00:00","value":870},{"point_time":"2022-07-15T11:10:00+00:00","value":870},{"point_time":"2022-07-15T11:15:00+00:00","value":870},{"point_time":"2022-07-15T11:20:00+00:00","value":870},{"point_time":"2022-07-15T11:25:00+00:00","value":870},{"point_time":"2022-07-15T11:30:00+00:00","value":870},{"point_time":"2022-07-15T11:35:00+00:00","value":870},{"point_time":"2022-07-15T11:40:00+00:00","value":870},{"point_time":"2022-07-15T11:45:00+00:00","value":870},{"point_time":"2022-07-15T11:50:00+00:00","value":870},{"point_time":"2022-07-15T11:55:00+00:00","value":870},{"point_time":"2022-07-15T12:00:00+00:00","value":870},{"point_time":"2022-07-15T12:05:00+00:00","value":870},{"point_time":"2022-07-15T12:10:00+00:00","value":870},{"point_time":"2022-07-15T12:15:00+00:00","value":870},{"point_time":"2022-07-15T12:20:00+00:00","value":870},{"point_time":"2022-07-15T12:25:00+00:00","value":870},{"point_time":"2022-07-15T12:30:00+00:00","value":870},{"point_time":"2022-07-15T12:35:00+00:00","value":870},{"point_time":"2022-07-15T12:40:00+00:00","value":870},{"point_time":"2022-07-15T12:45:00+00:00","value":870},{"point_time":"2022-07-15T12:50:00+00:00","value":870},{"point_time":"2022-07-15T12:55:00+00:00","value":870},{"point_time":"2022-07-15T13:00:00+00:00","value":870},{"point_time":"2022-07-15T13:05:00+00:00","value":870},{"point_time":"2022-07-15T13:10:00+00:00","value":870},{"point_time":"2022-07-15T13:15:00+00:00","value":870},{"point_time":"2022-07-15T13:20:00+00:00","value":870},{"point_time":"2022-07-15T13:25:00+00:00","value":870},{"point_time":"2022-07-15T13:30:00+00:00","value":870},{"point_time":"2022-07-15T13:35:00+00:00","value":870},{"point_time":"2022-07-15T13:40:00+00:00","value":870},{"point_time":"2022-07-15T13:45:00+00:00","value":870},{"point_time":"2022-07-15T13:50:00+00:00","value":870},{"point_time":"2022-07-15T13:55:00+00:00","value":870},{"point_time":"2022-07-15T14:00:00+00:00","value":870},{"point_time":"2022-07-15T14:05:00+00:00","value":870},{"point_time":"2022-07-15T14:10:00+00:00","value":870},{"point_time":"2022-07-15T14:15:00+00:00","value":870},{"point_time":"2022-07-15T14:20:00+00:00","value":870},{"point_time":"2022-07-15T14:25:00+00:00","value":870},{"point_time":"2022-07-15T14:30:00+00:00","value":870},{"point_time":"2022-07-15T14:35:00+00:00","value":870},{"point_time":"2022-07-15T14:40:00+00:00","value":870},{"point_time":"2022-07-15T14:45:00+00:00","value":870},{"point_time":"2022-07-15T14:50:00+00:00","value":870},{"point_time":"2022-07-15T14:55:00+00:00","value":870},{"point_time":"2022-07-15T15:00:00+00:00","value":870},{"point_time":"2022-07-15T15:05:00+00:00","value":870},{"point_time":"2022-07-15T15:10:00+00:00","value":870},{"point_time":"2022-07-15T15:15:00+00:00","value":870},{"point_time":"2022-07-15T15:20:00+00:00","value":870},{"point_time":"2022-07-15T15:25:00+00:00","value":870},{"point_time":"2022-07-15T15:30:00+00:00","value":870},{"point_time":"2022-07-15T15:35:00+00:00","value":870},{"point_time":"2022-07-15T15:40:00+00:00","value":870},{"point_time":"2022-07-15T15:45:00+00:00","value":870},{"point_time":"2022-07-15T15:50:00+00:00","value":870},{"point_time":"2022-07-15T15:55:00+00:00","value":870},{"point_time":"2022-07-15T16:00:00+00:00","value":870},{"point_time":"2022-07-15T16:05:00+00:00","value":870},{"point_time":"2022-07-15T16:10:00+00:00","value":870},{"point_time":"2022-07-15T16:15:00+00:00","value":870},{"point_time":"2022-07-15T16:20:00+00:00","value":870},{"point_time":"2022-07-15T16:25:00+00:00","value":870},{"point_time":"2022-07-15T16:30:00+00:00","value":870},{"point_time":"2022-07-15T16:35:00+00:00","value":870},{"point_time":"2022-07-15T16:40:00+00:00","value":870},{"point_time":"2022-07-15T16:45:00+00:00","value":870},{"point_time":"2022-07-15T16:50:00+00:00","value":870},{"point_time":"2022-07-15T16:55:00+00:00","value":870},{"point_time":"2022-07-15T17:00:00+00:00","value":870},{"point_time":"2022-07-15T17:05:00+00:00","value":870},{"point_time":"2022-07-15T17:10:00+00:00","value":870},{"point_time":"2022-07-15T17:15:00+00:00","value":870},{"point_time":"2022-07-15T17:20:00+00:00","value":870},{"point_time":"2022-07-15T17:25:00+00:00","value":870},{"point_time":"2022-07-15T17:30:00+00:00","value":870},{"point_time":"2022-07-15T17:35:00+00:00","value":870},{"point_time":"2022-07-15T17:40:00+00:00","value":870},{"point_time":"2022-07-15T17:45:00+00:00","value":870},{"point_time":"2022-07-15T17:50:00+00:00","value":870},{"point_time":"2022-07-15T17:55:00+00:00","value":870},{"point_time":"2022-07-15T18:00:00+00:00","value":870},{"point_time":"2022-07-15T18:05:00+00:00","value":870},{"point_time":"2022-07-15T18:10:00+00:00","value":870},{"point_time":"2022-07-15T18:15:00+00:00","value":870},{"point_time":"2022-07-15T18:20:00+00:00","value":870},{"point_time":"2022-07-15T18:25:00+00:00","value":870},{"point_time":"2022-07-15T18:30:00+00:00","value":870},{"point_time":"2022-07-15T18:35:00+00:00","value":870},{"point_time":"2022-07-15T18:40:00+00:00","value":870},{"point_time":"2022-07-15T18:45:00+00:00","value":870},{"point_time":"2022-07-15T18:50:00+00:00","value":870},{"point_time":"2022-07-15T18:55:00+00:00","value":870},{"point_time":"2022-07-15T19:00:00+00:00","value":870},{"point_time":"2022-07-15T19:05:00+00:00","value":870},{"point_time":"2022-07-15T19:10:00+00:00","value":870},{"point_time":"2022-07-15T19:15:00+00:00","value":870},{"point_time":"2022-07-15T19:20:00+00:00","value":870},{"point_time":"2022-07-15T19:25:00+00:00","value":870},{"point_time":"2022-07-15T19:30:00+00:00","value":870},{"point_time":"2022-07-15T19:35:00+00:00","value":870},{"point_time":"2022-07-15T19:40:00+00:00","value":870},{"point_time":"2022-07-15T19:45:00+00:00","value":870},{"point_time":"2022-07-15T19:50:00+00:00","value":870},{"point_time":"2022-07-15T19:55:00+00:00","value":870},{"point_time":"2022-07-15T20:00:00+00:00","value":870},{"point_time":"2022-07-15T20:05:00+00:00","value":870},{"point_time":"2022-07-15T20:10:00+00:00","value":870},{"point_time":"2022-07-15T20:15:00+00:00","value":870},{"point_time":"2022-07-15T20:20:00+00:00","value":870},{"point_time":"2022-07-15T20:25:00+00:00","value":870},{"point_time":"2022-07-15T20:30:00+00:00","value":870},{"point_time":"2022-07-15T20:35:00+00:00","value":870},{"point_time":"2022-07-15T20:40:00+00:00","value":870},{"point_time":"2022-07-15T20:45:00+00:00","value":870},{"point_time":"2022-07-15T20:50:00+00:00","value":870},{"point_time":"2022-07-15T20:55:00+00:00","value":870},{"point_time":"2022-07-15T21:00:00+00:00","value":870},{"point_time":"2022-07-15T21:05:00+00:00","value":870},{"point_time":"2022-07-15T21:10:00+00:00","value":870},{"point_time":"2022-07-15T21:15:00+00:00","value":870},{"point_time":"2022-07-15T21:20:00+00:00","value":870},{"point_time":"2022-07-15T21:25:00+00:00","value":870},{"point_time":"2022-07-15T21:30:00+00:00","value":870},{"point_time":"2022-07-15T21:35:00+00:00","value":870},{"point_time":"2022-07-15T21:40:00+00:00","value":870},{"point_time":"2022-07-15T21:45:00+00:00","value":870},{"point_time":"2022-07-15T21:50:00+00:00","value":870},{"point_time":"2022-07-15T21:55:00+00:00","value":870},{"point_time":"2022-07-15T22:00:00+00:00","value":870},{"point_time":"2022-07-15T22:05:00+00:00","value":870},{"point_time":"2022-07-15T22:10:00+00:00","value":870},{"point_time":"2022-07-15T22:15:00+00:00","value":870},{"point_time":"2022-07-15T22:20:00+00:00","value":870},{"point_time":"2022-07-15T22:25:00+00:00","value":870},{"point_time":"2022-07-15T22:30:00+00:00","value":870},{"point_time":"2022-07-15T22:35:00+00:00","value":870},{"point_time":"2022-07-15T22:40:00+00:00","value":870},{"point_time":"2022-07-15T22:45:00+00:00","value":870},{"point_time":"2022-07-15T22:50:00+00:00","value":870},{"point_time":"2022-07-15T22:55:00+00:00","value":870},{"point_time":"2022-07-15T23:00:00+00:00","value":870},{"point_time":"2022-07-15T23:05:00+00:00","value":870},{"point_time":"2022-07-15T23:10:00+00:00","value":870},{"point_time":"2022-07-15T23:15:00+00:00","value":870},{"point_time":"2022-07-15T23:20:00+00:00","value":870},{"point_time":"2022-07-15T23:25:00+00:00","value":870},{"point_time":"2022-07-15T23:30:00+00:00","value":870},{"point_time":"2022-07-15T23:35:00+00:00","value":870},{"point_time":"2022-07-15T23:40:00+00:00","value":870},{"point_time":"2022-07-15T23:45:00+00:00","value":870},{"point_time":"2022-07-15T23:50:00+00:00","value":870},{"point_time":"2022-07-15T23:55:00+00:00","value":870}],"meta":{"data_point_period_seconds":300,"region":"CAISO_NORTH","warnings":[{"type":"EXAMPLE_WARNING","message":"This is just an example"}],"signal_type":"co2_moer","model":{"date":"2023-03-01"},"units":"lbs_co2_per_mwh","generated_at_period_seconds":300,"generated_at":"2022-07-15T00:00:00+00:00"}}},"WarningType":{"properties":{"type":{"type":"string","title":"Type"},"message":{"type":"string","title":"Message"}},"type":"object","required":["type","message"],"title":"WarningType"},"HCEndpoint":{"properties":{"endpoint":{"type":"string","enum":["v3/forecast","v3/historical"],"title":"Endpoint"},"models":{"items":{"anyOf":[{"$ref":"#/components/schemas/HCHistoricalModel"},{"$ref":"#/components/schemas/HCForecastModel"}]},"type":"array","title":"Models"}},"type":"object","required":["endpoint","models"],"title":"HCEndpoint"},"HCForecastModel":{"properties":{"model":{"type":"string","format":"date","title":"Model"},"data_start":{"type":"string","format":"date","title":"Data Start"},"train_start":{"type":"string","format":"date","title":"Train Start"},"train_end":{"type":"string","format":"date","title":"Train End"}},"type":"object","required":["model","data_start","train_start","train_end"],"title":"HCForecastModel"},"HCHistoricalModel":{"properties":{"model":{"type":"string","format":"date","title":"Model"},"data_start":{"type":"string","format":"date","title":"Data Start"},"train_start":{"type":"string","format":"date","title":"Train Start"},"train_end":{"type":"string","format":"date","title":"Train End"},"type":{"$ref":"#/components/schemas/ModelTypes"}},"type":"object","required":["model","data_start","train_start","train_end","type"],"title":"HCHistoricalModel"},"HCRegion":{"properties":{"region":{"type":"string","title":"Region"},"region_full_name":{"type":"string","title":"Region Full Name"},"parent":{"type":"string","title":"Parent"},"data_point_period_seconds":{"type":"integer","enum":[3600,300],"title":"Data Point Period Seconds"},"endpoints":{"items":{"$ref":"#/components/schemas/HCEndpoint"},"type":"array","title":"Endpoints"}},"type":"object","required":["region","region_full_name","data_point_period_seconds","endpoints"],"title":"HCRegion"},"HCSignal":{"properties":{"signal_type":{"anyOf":[{"$ref":"#/components/schemas/V3Signals"},{}],"title":"Signal Type"},"regions":{"items":{"$ref":"#/components/schemas/HCRegion"},"type":"array","title":"Regions"}},"type":"object","required":["signal_type","regions"],"title":"HCSignal"},"PYHypercube":{"properties":{"signal_types":{"items":{"$ref":"#/components/schemas/HCSignal"},"type":"array","title":"Signal Types"}},"type":"object","required":["signal_types"],"title":"PYHypercube"},"V3Metadata":{"properties":{"data_point_period_seconds":{"type":"integer","title":"Data Point Period Seconds"},"region":{"type":"string","title":"Region"},"signal_type":{"$ref":"#/components/schemas/V3Signals"},"units":{"type":"string","title":"Units"},"warnings":{"items":{"$ref":"#/components/schemas/WarningType"},"type":"array","title":"Warnings"},"model":{"$ref":"#/components/schemas/V3ModelMetadata"}},"type":"object","required":["data_point_period_seconds","region","signal_type","units","warnings"],"title":"V3Metadata","example":{"data_point_period_seconds":300,"region":"CAISO_NORTH","warnings":[{"type":"EXAMPLE_WARNING","message":"This is just an example"}],"signal_type":"co2_moer","model":{"type":"binned_regression","date":"2023-03-01"},"units":"lbs_co2_per_mwh"}},"V3Response":{"properties":{"data":{"items":{"$ref":"#/components/schemas/APIV3DataResponseFormat"},"type":"array","title":"Data"},"meta":{"$ref":"#/components/schemas/V3Metadata"}},"type":"object","required":["data","meta"],"title":"V3Response","example":{"data":[{"point_time":"2022-07-15T00:00:00+00:00","value":870,"last_updated":"2023-10-01T00:00:00+00:00","imputed_data_used":true},{"point_time":"2022-07-15T00:05:00+00:00","value":860,"last_updated":"2023-10-01T00:05:00+00:00","imputed_data_used":true}],"meta":{"data_point_period_seconds":300,"region":"CAISO_NORTH","warnings":[{"type":"EXAMPLE_WARNING","message":"This is just an example"}],"signal_type":"co2_moer","model":{"type":"binned_regression","date":"2023-03-01"},"units":"lbs_co2_per_mwh"}}}}}}
